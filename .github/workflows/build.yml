name: Build & Publish Godot
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of Godot to build'
        required: true
      release:
        description: 'Add binary to releases'
        type: boolean
      docker_tag:
        description: 'Tag to set to Docker image; set to empty to not push to Docker Hub'
env:
  CACHE_GODOT: cache_godot_${{ github.event.inputs.version }}
  GODOT_FILENAME: godot
run-name: ${{ github.workflow }} ${{ github.event.inputs.version }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Godot
        id: cache-godot
        uses: actions/cache@v4
        with:
          path: ${{ env.GODOT_FILENAME }}_${{ github.event.inputs.version }}.zip
          key: ${{ env.CACHE_GODOT }}
      - name: Set up latest Alpine Linux
        uses: jirutka/setup-alpine@v1
      - name: Build Godot on Alpine chroot
        if: steps.cache-godot.outputs.cache-hit != 'true'
        run: |
          apk add --no-cache \
            git \
            zip \
            scons \
            pkgconf \
            gcc \
            g++ \
            libx11-dev \
            libxcursor-dev \
            libxinerama-dev \
            libxi-dev \
            libxrandr-dev \
            mesa-dev \
            eudev-dev \
            alsa-lib-dev \
            pulseaudio-dev \
            fontconfig-dev
          git clone https://github.com/godotengine/godot.git -b ${{ github.event.inputs.version }}-stable --depth 1
          scons -C godot platform=linuxbsd production=yes target=editor
          mv godot/bin/godot.linuxbsd.editor.x86_64 godot/bin/${{ env.GODOT_FILENAME }}
        shell: alpine.sh --root {0}
      - name: Zip Godot
        run: |
          cd godot/bin/
          zip ${{ env.GODOT_FILENAME }}_${{ github.event.inputs.version }}.zip ${{ env.GODOT_FILENAME }}
          cd -
          mv godot/bin/${{ env.GODOT_FILENAME }}_${{ github.event.inputs.version }}.zip ${{ env.GODOT_FILENAME }}_${{ github.event.inputs.version }}.zip
        shell: alpine.sh --root {0}
  release:
    if: github.event.inputs.release == 'true'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Cache Godot
        id: cache-godot
        uses: actions/cache@v4
        with:
          path: ${{ env.GODOT_FILENAME }}_${{ github.event.inputs.version }}.zip
          key: ${{ env.CACHE_GODOT }}
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: Godot v${{ github.event.inputs.version }} headless for Alpine Linux
          body: Godot v${{ github.event.inputs.version }} headless for Alpine Linux
          tag_name: v${{ github.event.inputs.version }}
          files: ${{ env.GODOT_FILENAME }}_${{ github.event.inputs.version }}.zip
  # docker:
  #   if: github.event.inputs.docker_tag != ''
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Cache Godot
  #       id: cache-godot
  #       uses: actions/cache@v4
  #       with:
  #         path: ${{ env.GODOT_FILENAME }}
  #         key: ${{ env.CACHE_GODOT }}
  #     - name: Login
  #       run: docker login -u ${{ secrets.dockerhub_username }} -p '${{ secrets.dockerhub_password }}'
  #     - name: Build container
  #       run: docker build -t xaltaq/godot-alpine:${{ github.event.inputs.docker_tag }} --build-arg GODOT_FILENAME=${{ env.GODOT_FILENAME }} .
  #     - name: Push image to Docker Hub
  #       run: docker push xaltaq/godot-alpine:${{ github.event.inputs.docker_tag }}
